from django.urls import reverse
from rest_framework.test import APITestCase
from rest_framework import status
from api.calc_data.models import *
from api.measurement.models import Measurement
from django.contrib.auth import get_user_model                                                                                                                                     
from django.db import models
import numpy as np
import os
import json
import matplotlib.pyplot as plt 

User = get_user_model()

class Test(APITestCase):

	def test_api(self):
		print ("TEST Start")
		print ("-"*40)
		
		user_obj = User.objects.create(
			username= "yukin",
			first_name="yuki", 
			last_name="nakagawa", 
			email="abc@def.com", 
			password="abc123def", 
			which_sex="M", 
			birth_date="1992-7-14", 
			age=27,
			dev_id ="1021"
		)
		measurement_obj = Measurement.objects.create(
			user=user_obj,
			start_time = "2012-12-2 12:20:2"
		)
		beat_data_obj = BeatData.objects.create(
			measurement = measurement_obj,
			beat_data = ""
		)
		pnn_data_obj = PnnData.objects.create(
			measurement = measurement_obj,
			pnn_data = ""
		)

		data1 = {
			"beat": [1864, 1879, 1890, 1898, 1904, 1910, 1914, 1917, 1917, 1915, 1910, 1904, 1897, 1890, 1881, 1873, 1865, 1859, 1852, 1847, 1841, 1834, 1829, 1826, 1823, 1819, 1815, 1810, 1803, 1796, 1793, 1792, 1792, 1793, 1792, 1789, 1787, 1786, 1784, 1780, 1774, 1766, 1758, 1751, 1745, 1738, 1735, 1733, 1729, 1726, 1725, 1724, 1724, 1725, 1725, 1724, 1725, 1725, 1724, 1723, 1722, 1718, 1713, 1706, 1700, 1696, 1696, 1701, 1710, 1723, 1740, 1760, 1781, 1802, 1823, 1845, 1866, 1886, 1903, 1917, 1929, 1939, 1946, 1951, 1955, 1959, 1960, 1961, 1960, 1957, 1952, 1947, 1942, 1937, 1929, 1919, 1907, 1897, 1891, 1885, 1880, 1877, 1875, 1873, 1871, 1868, 1863, 1859, 1855, 1851, 1845, 1837, 1831, 1826, 1820, 1815, 1810, 1805, 1802, 1802, 1802, 1802, 1802, 1801, 1799, 1796, 1791, 1782, 1777, 1772, 1767, 1763, 1761, 1757, 1754, 1751, 1749, 1745, 1740, 1736, 1734, 1732, 1730, 1728, 1726, 1725, 1722, 1715, 1709, 1705, 1701, 1697, 1694, 1691, 1688, 1686, 1684, 1683, 1683, 1686, 1690, 1694, 1697, 1700, 1703, 1706, 1707, 1708, 1708, 1710, 1713, 1719, 1729, 1741, 1755, 1769, 1784, 1800, 1814, 1832, 1851, 1869, 1885, 1898, 1909, 1920, 1927, 1932, 1931, 1929, 1928, 1927, 1925, 1921, 1916, 1910, 1905, 1900, 1894, 1888, 1884, 1879, 1874, 1869, 1863, 1857, 1850, 1844, 1840, 1832, 1827, 1823, 1820, 1818, 1816, 1814, 1812, 1812, 1812, 1809, 1808, 1805, 1801, 1797, 1794, 1791, 1788, 1782, 1775, 1766, 1758, 1749, 1739, 1731, 1724, 1720, 1718, 1716, 1715, 1716, 1717, 1719, 1721, 1721, 1720, 1718, 1714, 1711, 1709, 1709, 1707, 1706, 1705, 1703, 1700, 1696, 1691, 1687, 1682, 1678, 1674, 1673, 1672, 1673, 1674, 1676, 1679, 1682, 1685, 1687, 1687, 1688, 1690, 1692, 1695, 1697, 1698, 1699, 1701, 1706, 1712, 1717, 1723, 1731, 1742, 1755, 1769, 1785, 1802, 1820, 1836, 1849, 1861, 1872, 1879, 1884, 1888, 1891, 1894, 1896, 1895, 1889, 1885, 1882, 1879, 1874, 1868, 1862, 1858, 1855, 1852, 1845, 1839, 1834, 1830, 1825, 1820, 1814, 1811, 1810, 1808, 1806, 1803, 1800, 1796, 1792, 1789, 1784, 1778, 1771, 1765, 1761, 1758, 1756, 1755, 1754, 1752, 1750, 1748, 1745, 1742, 1739, 1734, 1730, 1725, 1719, 1715, 1712], 
			#"beat": [1,2,3],
			"time": "12:10:2",
			"dev_id": 1021,
			"measurement_id": measurement_obj.id
		}
		url = reverse("calc-data")
		response = self.client.post(url, data1)
		beat_list = BeatData.objects.get(measurement=measurement_obj).beat_data
		print ("Beat data 1 = ", beat_list[0:5])
		print ("Pnn data 1 = ", PnnData.objects.get(measurement=measurement_obj).pnn_data)
		print ("Beat data count 1 = ", BeatData.objects.all().count())
		data2 = {
			'beat': [1745, 1790, 1832, 1869, 1898, 1923, 1944, 1962, 1976, 1986, 1990, 1990, 1985, 1978, 1969, 1959, 1947, 1936, 1926, 1916, 1906, 1894, 1882, 1871, 1862, 1852, 1843, 1835, 1828, 1823, 1821, 1821, 1821, 1820, 1817, 1814, 1808, 1804, 1801, 1798, 1793, 1788, 1783, 1777, 1770, 1765, 1758, 1755, 1752, 1748, 1742, 1736, 1731, 1727, 1724, 1722, 1720, 1719, 1721, 1725, 1729, 1734, 1739, 1742, 1743, 1742, 1737, 1729, 1719, 1707, 1695, 1681, 1666, 1649, 1633, 1618, 1605, 1594, 1590, 1592, 1596, 1602, 1610, 1620, 1630, 1639, 1646, 1648, 1650, 1652, 1657, 1664, 1675, 1688, 1705, 1725, 1748, 1769, 1792, 1815, 1838, 1858, 1875, 1889, 1899, 1906, 1908, 1907, 1905, 1903, 1898, 1890, 1880, 1868, 1856, 1843, 1830, 1816, 1800, 1786, 1774, 1765, 1758, 1751, 1744, 1739, 1735, 1730, 1725, 1723, 1722, 1720, 1718, 1715, 1714, 1712, 1712, 1711, 1706, 1701, 1697, 1696, 1697, 1699, 1701, 1702, 1703, 1704, 1705, 1705, 1705, 1706, 1707, 1707, 1707, 1706, 1705, 1706, 1707, 1707, 1707, 1707, 1707, 1705, 1703, 1701, 1701, 1703, 1704, 1706, 1709, 1713, 1716, 1717, 1718, 1719, 1719, 1718, 1716, 1713, 1710, 1708, 1706, 1704, 1702, 1701, 1701, 1701, 1702, 1701, 1700, 1699, 1697, 1700, 1705, 1712, 1722, 1736, 1754, 1773, 1792, 1813, 1834, 1855, 1874, 1890, 1905, 1917, 1924, 1930, 1930, 1928, 1924, 1917, 1910, 1904, 1897, 1891, 1887, 1883, 1876, 1870, 1865, 1860, 1852, 1846, 1841, 1837, 1831, 1824, 1817, 1811, 1807, 1804, 1801, 1798, 1794, 1790, 1786, 1782, 1777, 1771, 1766, 1761, 1757, 1753, 1751, 1749, 1746, 1742, 1736, 1728, 1724, 1722, 1720, 1718, 1716, 1713, 1711, 1709, 1706, 1701, 1698, 1697, 1697, 1697, 1697, 1697, 1697, 1699, 1701, 1702, 1703, 1704, 1703, 1702, 1699, 1695, 1691, 1687, 1683, 1681, 1677, 1674, 1671, 1670, 1670, 1670, 1670, 1671, 1674, 1678, 1678, 1682, 1687, 1693, 1700, 1709, 1722, 1736, 1751, 1770, 1789, 1811, 1834, 1857, 1878, 1894, 1905, 1912, 1918, 1921, 1920, 1919, 1916, 1913, 1911, 1909, 1906, 1902, 1898, 1892, 1885, 1878, 1871, 1865, 1860, 1852, 1843, 1836, 1830, 1824, 1819, 1813, 1809, 1807, 1807, 1809, 1808, 1805, 1802, 1798, 1793, 1787, 1781, 1774, 1764, 1753],
			#"beat": [4,5,6],
			"time": "12:10:2",
			"dev_id": 1021,
			"measurement_id": measurement_obj.id
		}
		response = self.client.post(url, data2)
		beat_list = BeatData.objects.get(measurement=measurement_obj).beat_data
		print ("Beat data 2 = ", beat_list[0:5])
		print ("Pnn data 2 = ", PnnData.objects.get(measurement=measurement_obj).pnn_data)
		print ("Beat data count 2 = ", BeatData.objects.all().count())
		
		
		